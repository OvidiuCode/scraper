{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"confi",
				"config_file"
			],
			[
				"ale",
				"alert_delta\tabc"
			],
			[
				"B",
				"BASE_URL"
			],
			[
				"max",
				"max_page_number"
			],
			[
				"nex",
				"next_pages"
			],
			[
				"get",
				"get_session\tfunction"
			],
			[
				"pee",
				"peewee_async\t(database.py)"
			],
			[
				"C",
				"CharField\tclass"
			],
			[
				"product",
				"product_id\t(scraper.py)"
			],
			[
				"pro",
				"products\tstatement"
			],
			[
				"ne",
				"next_page"
			],
			[
				"next",
				"next_page"
			],
			[
				"NE",
				"NEXT_PAGE_CLASS\tstatement"
			],
			[
				"produ",
				"product_id"
			],
			[
				"new",
				"new_price"
			],
			[
				"opp",
				"opp2_score"
			],
			[
				"opp1",
				"opp1_score"
			],
			[
				"order",
				"order_by"
			],
			[
				"pati",
				"patient_ids"
			],
			[
				"Co",
				"Coupon"
			],
			[
				"co",
				"coupon\tstatement"
			],
			[
				"S",
				"String\tclass"
			],
			[
				"F",
				"Float\tclass"
			],
			[
				"In",
				"Integer\tclass"
			],
			[
				"scope",
				"_validate_task_scope"
			],
			[
				"Task",
				"TaskSerializer\tclass"
			],
			[
				"amount",
				"amount_off"
			],
			[
				"va",
				"valid_coupon\tstatement"
			],
			[
				"cou",
				"coupon_id\tstatement"
			],
			[
				"inb",
				"inbound_events"
			],
			[
				"as",
				"_as_json\tfunction"
			],
			[
				"be",
				"be_none\tfunction"
			],
			[
				"star",
				"start_at\tstatement"
			],
			[
				"up",
				"updated_at_date\tstatement"
			],
			[
				"crea",
				"created_at_date\tstatement"
			],
			[
				"delete",
				"delete_instance\tfunction"
			],
			[
				"im",
				"impact_sub"
			],
			[
				"plan",
				"plan_ids\tstatement"
			],
			[
				"store",
				"store_subscriptions"
			],
			[
				"sub",
				"subscription"
			],
			[
				"has",
				"has_subscription\tstatement"
			],
			[
				"Opp",
				"Opportunity"
			],
			[
				"O",
				"Opportunity"
			],
			[
				"Oppo",
				"OpportunityFactory"
			],
			[
				"pa",
				"patient_ids\tstatement"
			],
			[
				"create",
				"created_at\tstatement"
			],
			[
				"update",
				"updated_at\tstatement"
			],
			[
				"pat",
				"patient_auth"
			],
			[
				"no",
				"not_expired\tstatement"
			],
			[
				"CO",
				"COMPLETED"
			],
			[
				"utc",
				"utcnow\tfunction"
			],
			[
				"ex",
				"expected_settings\tstatement"
			],
			[
				"e",
				"ehealth_plans\tstatement"
			],
			[
				"enroll",
				"online_enrollable"
			],
			[
				"sta",
				"staticmethod\tclass"
			],
			[
				"Ehea",
				"EhealthMixin\tclass"
			],
			[
				"A",
				"ApiController\tclass"
			],
			[
				"ca",
				"carrier_id\tstatement"
			],
			[
				"base",
				"base_url\tstatement"
			],
			[
				"pla",
				"plan_key\tstatement"
			],
			[
				"segmn",
				"segment_id"
			],
			[
				"segm",
				"segment_id"
			],
			[
				"contrac",
				"contract_year"
			],
			[
				"zip",
				"zipcode\tstatement"
			],
			[
				"_ge",
				"_get_params\tstatement"
			],
			[
				"store_pla",
				"store_plans\tstatement"
			],
			[
				"Bas",
				"BaseSerializer\tclass"
			],
			[
				"com",
				"compared_filter\tstatement"
			],
			[
				"op",
				"opportunity\tstatement"
			],
			[
				"dele",
				"delete_instance"
			],
			[
				"Pati",
				"PatientFactory"
			],
			[
				"Pat",
				"PatientActivity\tclass"
			],
			[
				"ge",
				"get_aep_year\tfunction"
			],
			[
				"se",
				"segment_id\tstatement"
			],
			[
				"CMS",
				"CMS_SEGMENT_ID"
			],
			[
				"pharmac",
				"pharmacy_id"
			],
			[
				"patien",
				"patient_token"
			],
			[
				"ra",
				"rating\tstatement"
			],
			[
				"inclu",
				"include_coupon"
			],
			[
				"pma",
				"pharmacy_id"
			],
			[
				"selec",
				"selected_store"
			],
			[
				"Store",
				"StoreFeature\tclass"
			],
			[
				"Stor",
				"StoreFeature\tclass"
			],
			[
				"fea",
				"feature_ids\tstatement"
			],
			[
				"class",
				"classmethod\tclass"
			],
			[
				"E",
				"SKIP_EMAIL\tstatement"
			],
			[
				"clas",
				"classmethod\tclass"
			],
			[
				"drug_list_",
				"drug_list_drug_ids"
			],
			[
				"For",
				"FormulariesController\tclass"
			],
			[
				"Camp",
				"CampaignEvent"
			],
			[
				"even",
				"events_condition\tstatement"
			],
			[
				"FO",
				"FOLLOWUP_LOWER_LIMIT\tstatement"
			],
			[
				"date",
				"datetime\tclass"
			]
		]
	},
	"buffers":
	[
		{
			"file": "worker.py",
			"settings":
			{
				"buffer_size": 313,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "scraper.py",
			"settings":
			{
				"buffer_size": 3569,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/alert.py",
			"settings":
			{
				"buffer_size": 519,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/product.py",
			"settings":
			{
				"buffer_size": 414,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/price.py",
			"settings":
			{
				"buffer_size": 370,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "alert_dispatcher.py",
			"settings":
			{
				"buffer_size": 813,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "mutation {\n  createProduct(input:{\n    product: {\n      productNo: 3\n      name: \"Xiaomi\"\n      price: \"200\"\n    }\n  }) {\n    product {name}\n  }\n}\n\n\n{\n  allProducts(orderBy:PRICE_DESC) {\n    nodes {\n      name\n      price\n    }\n  }\n}",
			"settings":
			{
				"buffer_size": 233,
				"line_ending": "Unix",
				"name": "mutation {"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"rena",
				"Rename File"
			],
			[
				"ssma",
				"Set Syntax: MagicPython"
			],
			[
				"del",
				"File: Delete"
			],
			[
				"ren",
				"Rename File"
			],
			[
				"renam",
				"Rename File"
			],
			[
				"pytestse",
				"PyTest: Deactivate for this project"
			],
			[
				"preferencest li",
				"Preferences: SublimeLinter Settings"
			],
			[
				"prefere",
				"Preferences: Settings"
			],
			[
				"sync",
				"Sync Settings: Download"
			],
			[
				"setpyhon ",
				"Anaconda: Set Python interpreter"
			],
			[
				"dau ",
				"DA UI: General Settings"
			],
			[
				"da ui",
				"DA UI: Select Accent"
			],
			[
				"sspy",
				"Set Syntax: Python (Django)"
			],
			[
				"syncdo",
				"Sync Settings: Download"
			],
			[
				"ssmagi",
				"Set Syntax: MagicPython"
			],
			[
				"dele",
				"File: Delete"
			],
			[
				"ssp",
				"Set Syntax: Python"
			],
			[
				"ime",
				"Snippet: Method"
			],
			[
				"con",
				"Convert Case: separate‚ê£words"
			],
			[
				"delete",
				"File: Delete"
			],
			[
				"bla",
				"Git: Blame"
			],
			[
				"git",
				"Git: Blame"
			],
			[
				"gitbma",
				"Git: Blame"
			],
			[
				"gitbla",
				"Git: Blame"
			],
			[
				"git bla",
				"Git: Blame"
			],
			[
				"sssql",
				"Set Syntax: SQL"
			],
			[
				"ssxm",
				"Set Syntax: XML"
			],
			[
				"setting",
				"Preferences: Settings"
			],
			[
				"pref",
				"Preferences: Settings"
			],
			[
				"ssto",
				"Set Syntax: TOML"
			],
			[
				"syn",
				"Sync Settings: Download"
			],
			[
				"prefe",
				"Preferences: Settings"
			],
			[
				"syncse",
				"Sync Settings: Download"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"isntal\t",
				"Install Package Control"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 270.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/ovidiurusu/Github/licenta/scraper",
		"/Users/ovidiurusu/Github/licenta/scraper/configs",
		"/Users/ovidiurusu/Github/licenta/scraper/models"
	],
	"file_history":
	[
		"/Users/ovidiurusu/Github/licenta/scraper/__init__.py",
		"/Users/ovidiurusu/Github/licenta/scraper/app.py",
		"/Users/ovidiurusu/Github/licenta/scraper/configs/production.toml",
		"/Users/ovidiurusu/Github/licenta/scraper/models/Price",
		"/Users/ovidiurusu/.ipython/profile_imedicare/startup/imed_db.py",
		"/Users/ovidiurusu/Github/licenta/scraper/models/alert.py",
		"/Users/ovidiurusu/Github/licenta/scraper/models/product.py",
		"/Users/ovidiurusu/Github/licenta/scraper/models/__init__.py",
		"/Users/ovidiurusu/Github/licenta/scraper/models/database.py",
		"/Users/ovidiurusu/Github/licenta/scraper/migrator.py",
		"/Users/ovidiurusu/Github/licenta/scraper/requirements.txt",
		"/Users/ovidiurusu/.zshrc",
		"/Users/ovidiurusu/.zpreztorc",
		"/Users/ovidiurusu/Github/licenta/scraper/parsed.hmtl",
		"/Users/ovidiurusu/Github/licenta/scraper/migrations/__init__.py",
		"/Users/ovidiurusu/Github/licenta/scraper/migrations/product_migration.py",
		"/Users/ovidiurusu/Github/licenta/scraper/migrations/products_migration.py",
		"/Users/ovidiurusu/Github/licenta/scraper/scraper.py",
		"/Users/ovidiurusu/Github/licenta/scraper/setup.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/requirements.txt",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/filters/opportunity_filter.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/li_api/recommendations_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/li_api/desktop_app_events_controller.py",
		"/Users/ovidiurusu/Github/licenta/scraper/scra",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/opportunities_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/li_api/recommendations_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/ehealth_api/ehealth_patients_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/li_api/mixins/li_mixin.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/config/development.toml",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/stripe_webhook_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/pharmacies_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/files_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/api/patients_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/filters/patient_filters.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/patients_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/serializers/subscription_serializer.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/serializers/coupon_serializer.py",
		"/Users/ovidiurusu/.config/fish/functions/fish_prompt.fish",
		"/Users/ovidiurusu/.config/fish/config.fish",
		"/Users/ovidiurusu/.zshc",
		"/Users/ovidiurusu/Library/Application Support/Sublime Text 3/Packages/User/BlackSortPython.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/manage.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/subscriptions_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/api/coupons_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/coupons_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/serializers/ehealth_patient_serializer_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/api/stripe_webhook_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/enrollments_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/ehealth_api/ehealth_patients_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/serializers/ehealth_patient_serializer.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/ehealth_api/ehealth_comparisons_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/serializers/coupon_serializer_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/api/subscriptions_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/serializers/subscription_serializer_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/config/config.default.toml",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/__init__.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/serializers/__init__.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/ivr_webhook.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/api/files_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/api/cards_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/cards_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/api/comparisons_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/comparisons_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/base_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/patient_tokens_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/serializers/patient_token_serializer.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/ehealth_api/ehealth_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/tasks_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/serializers/task_serializer.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/campaigns_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/api/ivr_webhook_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/initializer.py",
		"/Users/ovidiurusu/Github/webhook_tester.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/fixtures/json/invalid_ivr_response_5.json",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/fixtures/json/invalid_ivr_response_6.json",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/fixtures/json/invalid_ivr_response_2.json",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/fixtures/json/invalid_ivr_response_4.json",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/fixtures/json/invalid_ivr_response_3.json",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/fixtures/json/invalid_ivr_response_1.json",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/fixtures/json/ivr_response.json",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/api/leads_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/api/intercom_webhook_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/callfire_redirect_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/mixins/ehealth_mixin.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/plans_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/ehealth_api/ehealth_comparisons_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/api/registrations_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/serializers/plan_serializer.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/serializers/store_plan_serializer.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/pioneer_notifications_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/serializers/pharmacy_serializer_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/api/report_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/reports_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/api/custom_campaigns_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/custom_campaigns_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/api/auto_campaigns_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/auto_campaigns_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/adherences_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/serializers/pharmacy_serializer.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/formularies_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/api/formularies_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/li_api/settings_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/plivo_api/plivo_webhook_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/.tox/py27/lib/python2.7/site-packages/pip/_vendor/colorama/initialise.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/recordings_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/plivo_api/plivo_mixin.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/api/opportunities_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/query_arg.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/.tox/lint/lib/python2.7/site-packages/imedicare/shared/models/plan.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/.tox/lint/lib/python2.7/site-packages/imedicare/shared/models/opportunity.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/registrations_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/mixins/validator_mixin.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/serializers/template_serializer_spec.py",
		"/Users/ovidiurusu/Library/Application Support/Sublime Text 3/Packages/GoSublime/USAGE.md",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/api/pharmacies_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/serializers/template_serializer.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/.tox/lint/lib/python2.7/site-packages/imedicare/shared/models/patient.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/.tox/lint/lib/python2.7/site-packages/imedicare/shared/models/base.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/serializers/patient_serializer.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/.tox/lint/lib/python2.7/site-packages/imedicare/subscriptions/plans.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/li_api/desktop_app_events_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/serializers/patient_serializer_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/api/plans_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/serializers/ehealth_comparison_serializer.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/spec/controllers/api/patient_tokens_controller_spec.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/app/controllers/api/formulary_exceptions_controller.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/.tox/lint/lib/python2.7/site-packages/astroid/mixins.py",
		"/Users/ovidiurusu/Github/imedicare/app-api/.tox/lint/lib/python2.7/site-packages/imedicare/plan_cost/calculator.py"
	],
	"find":
	{
		"height": 56.0
	},
	"find_in_files":
	{
		"height": 149.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"origin",
			"products",
			"OBJ_MANAGER",
			"get_all_pages",
			"next_page",
			"get_session",
			"OBJ_MANAGER",
			"aiohttp",
			"asyncio",
			"get_session",
			"gather",
			"get_page_items",
			"card-section-wrapper",
			"button",
			"data-offerid",
			"4990392",
			"megamenu-container",
			"megamenu",
			"megamenu-details-department-items",
			"href=\"",
			"all-departments?ref=hdr_mm_14",
			"href=\"",
			"229",
			"price",
			"Adherence",
			"limit",
			"_kinds_to_search_for",
			"get_opportunity_for_patient",
			"opportunity",
			"priority",
			"scr",
			"custom_opp_compare",
			"get_opportunity_for_patient",
			"custom_opp_compare",
			"best_opp",
			"compared",
			"report.",
			"_onboarding_recommendation",
			"_get_assist_settings",
			"Report.up",
			"_kinds_to_search_for",
			"_handle_special_events",
			"_onboarding_recommendation",
			"DesktopAppEvent",
			"onboarding_recommendation_additional_data",
			"_kinds_to_search_for",
			"CUSTOM_KINDS",
			"convert_kind_backwards",
			"_kinds_to_search_for",
			"onboarding_no_opportunity",
			"Sorry",
			"mimety",
			"install",
			"installed",
			"installes",
			"phase",
			"bin",
			"error",
			"limit",
			"adherence",
			"F5BE66",
			"90ACD9",
			"64E6FA",
			"#",
			"enrollment_status_monitor",
			"amount_off",
			"cache_",
			"calculate_exact_coupon",
			"float",
			"onlineEnr",
			"{",
			"files",
			"file",
			"flexmock",
			"BaseSerializer.FIELDS.Boolean()",
			"valid = BaseSerializer.FIELDS.Bool()",
			"BaseSerializer.FIELDS.Float()",
			"joins",
			"patient",
			"cached",
			"CACHE_KEY",
			"index",
			"Coupon",
			"amplicare_connect_sub",
			"coupons",
			"test",
			"cache",
			"status",
			"TTL_2HOURS",
			"cached",
			"adherence",
			"group_by",
			"_store_recording",
			"_post_campaign_sound",
			"callfire",
			"phone",
			"reach_out_credits",
			"prices",
			"_recordings_from_content",
			"_store_recording",
			"_post_campaign_sound",
			"phase",
			"compared",
			"_store_recording",
			"_recordings_from_content",
			"return",
			"_process_recording",
			"_recordings_from_content",
			"inbound_events",
			"tonumber",
			"app.config",
			"_call_api_with_data",
			"invalid_ivr_response_",
			"_recordings_from_content",
			"app.config",
			"in_revi",
			"_recordings_from_content",
			"from",
			"no_subscription",
			"ResourceSchema",
			"EventsSchema",
			"UNPROCESSABLE_ENTITY",
			"WebhookResponseSchema",
			"paying_customers()",
			"is_online_enrollable",
			"settings",
			"discount",
			"subscription"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"NEW_STATUSES",
			"ACTIVE",
			"_percent",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "worker.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 313,
						"regions":
						{
						},
						"selection":
						[
							[
								142,
								142
							]
						],
						"settings":
						{
							"SL.154.region_keys":
							[
							],
							"SL.283.region_keys":
							[
							],
							"apply_syntax_touched": true,
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, source.js"
								},
								{
									"characters": ".:",
									"selector": "source.rust"
								},
								{
									"characters": ".",
									"selector": "source.python, source.go, source.js"
								},
								{
									"characters": ":$",
									"selector": "source.sass, source.scss"
								},
								{
									"characters": "@+",
									"selector": "text.todotxt"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/base16-midnight.dark.tmTheme",
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"open_with_edit": true,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/MagicPython/grammars/MagicPython.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "scraper.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3569,
						"regions":
						{
						},
						"selection":
						[
							[
								1648,
								1659
							]
						],
						"settings":
						{
							"SL.150.region_keys":
							[
							],
							"SL.26.region_keys":
							[
							],
							"SL.284.region_keys":
							[
							],
							"SL.462.region_keys":
							[
							],
							"SL.789.region_keys":
							[
							],
							"apply_syntax_touched": true,
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, source.js"
								},
								{
									"characters": ".:",
									"selector": "source.rust"
								},
								{
									"characters": ".",
									"selector": "source.python, source.go, source.js"
								},
								{
									"characters": ":$",
									"selector": "source.sass, source.scss"
								},
								{
									"characters": "@+",
									"selector": "text.todotxt"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1670,
										1671
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										1659,
										1660
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/base16-midnight.dark.tmTheme",
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/MagicPython/grammars/MagicPython.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 521.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "models/alert.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 519,
						"regions":
						{
						},
						"selection":
						[
							[
								518,
								518
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										517,
										518
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										491,
										492
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/base16-midnight.dark.tmTheme",
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/MagicPython/grammars/MagicPython.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "models/product.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 414,
						"regions":
						{
						},
						"selection":
						[
							[
								319,
								319
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										412,
										413
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										391,
										392
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										318,
										319
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										317,
										318
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/base16-midnight.dark.tmTheme",
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/MagicPython/grammars/MagicPython.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "models/price.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 370,
						"regions":
						{
						},
						"selection":
						[
							[
								369,
								369
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										368,
										369
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										342,
										343
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/base16-midnight.dark.tmTheme",
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"open_with_edit": true,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/MagicPython/grammars/MagicPython.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "alert_dispatcher.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 813,
						"regions":
						{
						},
						"selection":
						[
							[
								43,
								43
							]
						],
						"settings":
						{
							"SL.629.region_keys":
							[
							],
							"apply_syntax_touched": true,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/base16-midnight.dark.tmTheme",
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"open_with_edit": true,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/MagicPython/grammars/MagicPython.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 233,
						"regions":
						{
						},
						"selection":
						[
							[
								233,
								233
							]
						],
						"settings":
						{
							"SL.795.region_keys":
							[
							],
							"apply_syntax_touched": true,
							"auto_name": "mutation {",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"default_dir": "/Users/ovidiurusu/Github/licenta/scraper",
							"git_gutter_is_enabled": false,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 32.0
	},
	"input":
	{
		"height": 59.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.GoSublime-main-output":
	{
		"height": 174.0
	},
	"output.GoSublime-output":
	{
		"height": 156.0
	},
	"output.MarGo-output":
	{
		"height": 156.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 172.0
	},
	"output.browse":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 174.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "scraper.sublime-project",
	"replace":
	{
		"height": 95.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"prod",
				"models/product.py"
			],
			[
				"aler",
				"models/alert.py"
			],
			[
				"re",
				"requirements.txt"
			],
			[
				"req",
				"requirements.txt"
			],
			[
				"pars",
				"parsed.hmtl"
			],
			[
				"cra",
				"scraper.py"
			],
			[
				"oppco",
				"app/controllers/api/opportunities_controller.py"
			],
			[
				"ehealtpatico",
				"app/controllers/ehealth_api/ehealth_patients_controller.py"
			],
			[
				"deskt",
				"app/controllers/li_api/desktop_app_events_controller.py"
			],
			[
				"recommcos",
				"spec/controllers/li_api/recommendations_controller_spec.py"
			],
			[
				"lix",
				"app/controllers/li_api/mixins/li_mixin.py"
			],
			[
				"reco",
				"app/controllers/li_api/recommendations_controller.py"
			],
			[
				"oppf",
				"app/controllers/filters/opportunity_filter.py"
			],
			[
				"des",
				"app/controllers/li_api/desktop_app_events_controller.py"
			],
			[
				"stripewe",
				"app/controllers/api/stripe_webhook_controller.py"
			],
			[
				"fileco",
				"app/controllers/api/files_controller.py"
			],
			[
				"phar",
				"app/controllers/api/pharmacies_controller.py"
			],
			[
				"patieco",
				"app/controllers/api/patients_controller.py"
			],
			[
				"patientcos",
				"spec/controllers/api/patients_controller_spec.py"
			],
			[
				"coupo",
				"app/serializers/coupon_serializer.py"
			],
			[
				"subs",
				"app/serializers/subscription_serializer.py"
			],
			[
				"stri",
				"app/controllers/api/stripe_webhook_controller.py"
			],
			[
				"stripe",
				"app/controllers/api/stripe_webhook_controller.py"
			],
			[
				"py",
				"manage.py"
			],
			[
				"stripewecs",
				"spec/controllers/api/stripe_webhook_controller_spec.py"
			],
			[
				"cou",
				"app/controllers/api/coupons_controller.py"
			],
			[
				"subsco",
				"app/controllers/api/subscriptions_controller.py"
			],
			[
				"eheapatic",
				"app/controllers/ehealth_api/ehealth_patients_controller.py"
			],
			[
				"eheapatises",
				"spec/serializers/ehealth_patient_serializer_spec.py"
			],
			[
				"eheapati",
				"app/serializers/ehealth_patient_serializer.py"
			],
			[
				"eheapacosp",
				"spec/controllers/ehealth_api/ehealth_patients_controller_spec.py"
			],
			[
				"eheapacos",
				"spec/controllers/ehealth_api/ehealth_comparisons_controller_spec.py"
			],
			[
				"eheapasesp",
				"spec/serializers/ehealth_patient_serializer_spec.py"
			],
			[
				"eheapa",
				"app/serializers/ehealth_patient_serializer.py"
			],
			[
				"couponcos",
				"spec/controllers/api/coupons_controller_spec.py"
			],
			[
				"ehealpa",
				"app/serializers/ehealth_patient_serializer.py"
			],
			[
				"subsse",
				"app/serializers/subscription_serializer.py"
			],
			[
				"coupon",
				"app/serializers/coupon_serializer.py"
			],
			[
				"subcosp",
				"spec/controllers/api/subscriptions_controller_spec.py"
			],
			[
				"subste",
				"spec/serializers/subscription_serializer_spec.py"
			],
			[
				"subsc",
				"app/controllers/api/subscriptions_controller.py"
			],
			[
				"files",
				"app/controllers/api/files_controller.py"
			],
			[
				"couse",
				"spec/serializers/coupon_serializer_spec.py"
			],
			[
				"deve",
				"config/development.toml"
			],
			[
				"conf",
				"config/config.default.toml"
			],
			[
				"init",
				"app/controllers/api/__init__.py"
			],
			[
				"filescos",
				"spec/controllers/api/files_controller_spec.py"
			],
			[
				"con",
				"config/config.default.toml"
			],
			[
				"cardc",
				"app/controllers/api/cards_controller.py"
			],
			[
				"comparcos",
				"spec/controllers/api/comparisons_controller_spec.py"
			],
			[
				"comparico",
				"app/controllers/api/comparisons_controller.py"
			],
			[
				"patietok",
				"app/serializers/patient_token_serializer.py"
			],
			[
				"patieto",
				"app/controllers/api/patient_tokens_controller.py"
			],
			[
				"eheal",
				"app/controllers/ehealth_api/ehealth_controller.py"
			],
			[
				"opp",
				"app/controllers/api/opportunities_controller.py"
			],
			[
				"subscse",
				"app/serializers/subscription_serializer.py"
			],
			[
				"strip",
				"app/controllers/api/stripe_webhook_controller.py"
			],
			[
				"task",
				"app/serializers/task_serializer.py"
			],
			[
				"tasksc",
				"app/controllers/api/tasks_controller.py"
			],
			[
				"compar",
				"app/controllers/api/comparisons_controller.py"
			],
			[
				"campa",
				"app/controllers/api/campaigns_controller.py"
			],
			[
				"taskse",
				"app/serializers/task_serializer.py"
			],
			[
				"tasks",
				"app/controllers/api/tasks_controller.py"
			],
			[
				"subscs",
				"spec/controllers/api/subscriptions_controller_spec.py"
			],
			[
				"subscos",
				"spec/controllers/api/subscriptions_controller_spec.py"
			],
			[
				"oppc",
				"app/controllers/api/opportunities_controller.py"
			],
			[
				"recom",
				"app/controllers/li_api/recommendations_controller.py"
			],
			[
				"ini",
				"app/initializer.py"
			],
			[
				"ivrwe",
				"spec/controllers/api/ivr_webhook_controller_spec.py"
			],
			[
				"ivr",
				"spec/controllers/api/ivr_webhook_controller_spec.py"
			],
			[
				"ivrres",
				"spec/fixtures/json/invalid_ivr_response_5.json"
			],
			[
				"inval",
				"spec/fixtures/json/invalid_ivr_response_6.json"
			],
			[
				"invali",
				"spec/fixtures/json/invalid_ivr_response_4.json"
			],
			[
				"inva",
				"spec/fixtures/json/invalid_ivr_response_3.json"
			],
			[
				"ivrre",
				"spec/fixtures/json/ivr_response.json"
			],
			[
				"ivrco",
				"spec/controllers/api/ivr_webhook_controller_spec.py"
			],
			[
				"callfi",
				"app/controllers/api/callfire_redirect_controller.py"
			],
			[
				"ivrwebs",
				"spec/controllers/api/ivr_webhook_controller_spec.py"
			],
			[
				"ehealcom",
				"app/controllers/ehealth_api/ehealth_comparisons_controller.py"
			],
			[
				"plansco",
				"app/controllers/api/plans_controller.py"
			],
			[
				"storepla",
				"app/serializers/store_plan_serializer.py"
			],
			[
				"planse",
				"app/serializers/plan_serializer.py"
			],
			[
				"regiscs",
				"spec/controllers/api/registrations_controller_spec.py"
			],
			[
				"repoc",
				"app/controllers/api/reports_controller.py"
			],
			[
				"customcam",
				"app/controllers/api/custom_campaigns_controller.py"
			],
			[
				"autocaco",
				"app/controllers/api/auto_campaigns_controller.py"
			],
			[
				"recomm",
				"app/controllers/li_api/recommendations_controller.py"
			],
			[
				"pharco",
				"app/controllers/api/pharmacies_controller.py"
			],
			[
				"ehealc",
				"app/controllers/ehealth_api/ehealth_patients_controller.py"
			],
			[
				"eheapac",
				"app/controllers/ehealth_api/ehealth_patients_controller.py"
			],
			[
				"plans",
				"app/controllers/api/plans_controller.py"
			],
			[
				"oppcp",
				"app/controllers/api/opportunities_controller.py"
			],
			[
				"pharse",
				"app/serializers/pharmacy_serializer.py"
			],
			[
				"taskco",
				"app/controllers/api/tasks_controller.py"
			],
			[
				"patic",
				"app/controllers/api/patients_controller.py"
			],
			[
				"compa",
				"app/controllers/api/comparisons_controller.py"
			],
			[
				"formucos",
				"spec/controllers/api/formularies_controller_spec.py"
			],
			[
				"form",
				"app/controllers/api/formularies_controller.py"
			],
			[
				"setting",
				"app/controllers/li_api/settings_controller.py"
			],
			[
				"formcs",
				"spec/controllers/api/formularies_controller_spec.py"
			],
			[
				"initia",
				"app/initializer.py"
			],
			[
				"iv",
				"app/controllers/api/ivr_webhook.py"
			],
			[
				"pliv",
				"app/controllers/plivo_api/plivo_mixin.py"
			],
			[
				"plivo",
				"app/controllers/plivo_api/plivo_webhook_controller.py"
			],
			[
				"recordc",
				"app/controllers/api/recordings_controller.py"
			],
			[
				"patie",
				"app/controllers/filters/patient_filters.py"
			],
			[
				"oppcs",
				"spec/controllers/api/opportunities_controller_spec.py"
			],
			[
				"oppcos",
				"spec/controllers/api/opportunities_controller_spec.py"
			],
			[
				"oppfi",
				"app/controllers/filters/opportunity_filter.py"
			],
			[
				"pharses",
				"spec/serializers/pharmacy_serializer_spec.py"
			],
			[
				"phars",
				"app/serializers/pharmacy_serializer.py"
			],
			[
				"reg",
				"app/controllers/api/registrations_controller.py"
			],
			[
				"pha",
				"app/serializers/pharmacy_serializer.py"
			],
			[
				"eheapatc",
				"spec/controllers/ehealth_api/ehealth_patients_controller_spec.py"
			],
			[
				"enrco",
				"app/controllers/api/enrollments_controller.py"
			],
			[
				"eheacomcs",
				"spec/controllers/ehealth_api/ehealth_comparisons_controller_spec.py"
			],
			[
				"eheapatcs",
				"spec/controllers/ehealth_api/ehealth_patients_controller_spec.py"
			],
			[
				"ehealcomcos",
				"spec/controllers/ehealth_api/ehealth_comparisons_controller_spec.py"
			],
			[
				"patitok",
				"app/controllers/api/patient_tokens_controller.py"
			],
			[
				"eheacom",
				"app/controllers/ehealth_api/ehealth_comparisons_controller.py"
			],
			[
				"pharcos",
				"spec/controllers/api/pharmacies_controller_spec.py"
			],
			[
				"templaes",
				"spec/serializers/template_serializer_spec.py"
			],
			[
				"templa",
				"app/serializers/template_serializer.py"
			],
			[
				"pharcs",
				"spec/controllers/api/pharmacies_controller_spec.py"
			],
			[
				"patico",
				"app/controllers/api/patients_controller.py"
			],
			[
				"subcos",
				"spec/controllers/api/subscriptions_controller_spec.py"
			],
			[
				"stripwcs",
				"spec/controllers/api/stripe_webhook_controller_spec.py"
			],
			[
				"appsc",
				"spec/controllers/li_api/desktop_app_events_controller_spec.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "con",
		"selected_items":
		[
			[
				"con",
				"~/Github/imedicare/console-api/console-api.sublime-project"
			],
			[
				"",
				"~/Github/imedicare/imedicare.sublime-project"
			],
			[
				"sha",
				"~/Github/imedicare/shared/shared.sublime-project"
			],
			[
				"app",
				"~/Github/imedicare/app-api/app-api.sublime-project"
			],
			[
				"sh",
				"~/Github/imedicare/shared/shared.sublime-project"
			],
			[
				"jobs",
				"~/Github/imedicare/jobs/jobs.sublime-workspace"
			],
			[
				"subs",
				"~/Github/imedicare/subscriptions/subscriptions.sublime-project"
			],
			[
				"ime",
				"~/Github/imedicare/imedicare.sublime-project"
			],
			[
				"appsc",
				"~/Github/imedicare/app-scripts/app-scripts.sublime-project"
			],
			[
				"impor",
				"~/Github/imedicare/importers/importers.sublime-project"
			],
			[
				"impo",
				"~/Github/imedicare/importers/importers.sublime-project"
			],
			[
				"job",
				"~/Github/imedicare/jobs/jobs.sublime-workspace"
			],
			[
				"sub",
				"~/Github/imedicare/subscriptions/subscriptions.sublime-project"
			],
			[
				"ocn",
				"~/Github/imedicare/console-api/console-api.sublime-project"
			],
			[
				"app-sc",
				"~/Github/imedicare/app-scripts/app-scripts.sublime-project"
			],
			[
				"ssubs",
				"~/Github/imedicare/subscriptions/subscriptions.sublime-project"
			],
			[
				"su",
				"~/Github/imedicare/subscriptions/subscriptions.sublime-project"
			],
			[
				"dha",
				"~/Github/imedicare/shared/shared.sublime-project"
			],
			[
				"ser",
				"~/Github/imedicare/servers/servers.sublime-project"
			],
			[
				"im",
				"~/Github/imedicare/imedicare.sublime-project"
			],
			[
				"su ",
				"~/Github/imedicare/subscriptions/subscriptions.sublime-project"
			],
			[
				"co",
				"~/Github/imedicare/console-api/console-api.sublime-project"
			],
			[
				"pa",
				"~/Github/imedicare/patient-algorithms/patient_algo.sublime-workspace"
			],
			[
				"er",
				"~/Github/imedicare/servers/servers.sublime-project"
			],
			[
				"hsa",
				"~/Github/imedicare/app-scripts/app-scripts.sublime-project"
			],
			[
				"cons",
				"~/Github/imedicare/console-api/console-api.sublime-project"
			],
			[
				"ao",
				"~/Github/imedicare/app-api/app-api.sublime-project"
			],
			[
				"apps",
				"~/Github/imedicare/app-api/app-api.sublime-project"
			],
			[
				"appasc",
				"~/Github/imedicare/app-scripts/app-scripts.sublime-project"
			],
			[
				"apapp",
				"~/Github/imedicare/app-api/app-api.sublime-project"
			],
			[
				"imedi",
				"~/Github/imedicare/imedicare.sublime-project"
			],
			[
				"plan",
				"~/Github/imedicare/plan-cost/plan-cost.sublime-project"
			],
			[
				"serv",
				"~/Github/imedicare/servers/servers.sublime-project"
			],
			[
				"share",
				"~/Github/imedicare/shared/shared.sublime-project"
			],
			[
				"imp",
				"~/Github/imedicare/importers/importers.sublime-project"
			],
			[
				"iime",
				"~/Github/imedicare/imedicare.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 314.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
